# {{ ansible_managed }}

services:
  influxdb:
    container_name: influxdb
    image: influxdb:latest
    command: ["--reporting-disabled"]
    ports:
      - "8086:8086"
      - "8089:8089/udp"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME={{ influxdb_root_user }}
      - DOCKER_INFLUXDB_INIT_PASSWORD={{ influxdb_root_password }}
      - DOCKER_INFLUXDB_INIT_ORG={{ influxdb_init_org }}
      - DOCKER_INFLUXDB_INIT_BUCKET={{ influxdb_init_org }}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN={{ influxdb_init_api_token }}
    volumes:
      - influxdb-data:/var/lib/influxdb2
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: minio
    entrypoint:
      - sh
      - -c
      - |
        mkdir -p /data/mimir && \
        mkdir -p /data/loki-data && mkdir -p /data/loki-ruler && \
        mkdir -p /data/tempo && \
        minio server --quiet /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER={{ monitoring_mimir_root_user }}
      - MINIO_ROOT_PASSWORD={{ monitoring_mimir_root_password }}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped

  mimir:
    image: grafana/mimir
    container_name: mimir
    command: ["-config.file=/etc/mimir.yml"]
    ports:
      - "9009:9009"
    volumes:
      - ./mimir/mimir.yml:/etc/mimir.yml
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.external-url=https://prom.home.trox.dev/
      - --web.enable-remote-write-receiver
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    ports:
      - "9093:9093"
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --web.external-url=https://am.home.trox.dev/
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
    depends_on:
      - prometheus
      - influxdb
    restart: unless-stopped

  tempo:
    image: grafana/tempo
    container_name: tempo
    command: ["-config.file=/etc/tempo/tempo.yml"]
    volumes:
      - ./tempo/:/etc/tempo
      - tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    depends_on:
      - minio
    restart: unless-stopped

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yml
    volumes:
      - ./loki/:/etc/loki
    restart: unless-stopped

  blackbox:
    image: prom/blackbox-exporter
    container_name: blackbox
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox:/etc/blackbox_exporter
    restart: unless-stopped


volumes:
  grafana-data:
  minio-data:
  influxdb-data:
  tempo-data:
  prometheus-data:
